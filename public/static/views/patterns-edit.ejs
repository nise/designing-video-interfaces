<% layout( 'layout' ) -%>
<% if(!production) { %>
	<div class="jumbotron">
		<div class="container">
			<h2>Edit Pattern:
				<%= items.name %>
			</h2>
			<%= items._id %>
		</div>
	</div>

	<div class="container">
		<div class="col-md-8">
			<div id="errors"></div>
			<form class="patterns-edit" id="form"></form>
			<div id="res" class="alert"></div>
		</div>
		<div class="col-md-4">
			<h4>Related Patterns</h4>
			<div id="relatedpatterns">
				<% if( items.related_patterns ){ %>
					<% items.related_patterns.forEach( function ( related ){ %>
						<div class="miniform" id="related-<%= related.label %>">
							<div>
								<label>Pattern:</label>
								<input name="label" value="<%= related.label %>" />
							</div>
							<div>
								<label>Description:</label>
								<textarea name="description"><%= related.description %></textarea>
							</div>
							<div>
								<label>Relation:</label>
								<select name="type">
									<option value="is-a" <% if( related.type=='is-a' ){ %>selected
										<% } %> >
											<%= items.name%> ist ähnlich/alternativ</option>
									<option value="is-contained-by" <% if( related.type=='is-contained-by' ){ %>selected
										<% } %>>
											<%= items.name%> ist Bestandteil von ...</option>
									<option value="contains" <% if( related.type=='contains' ){ %>selected
										<% } %>>
											<%= items.name%> beinhaltet ...</option>
								</select>
							</div>
							<div>
								<label>Collection:</label>
								<input name="collection" value="<%= related.pattern_collection %>" />
							</div>
							<div>
								<button class="button removeRelPattern">
									<span class="glyphicon glyphicon-remove"></span>
								</button>
							</div>
						</div>
						<% }) %>
							<% }else{ %>
								<div class="miniform" id="related-new %>">
									<div>
										<label>Pattern:</label>
										<input name="label" value="" />
									</div>
									<div>
										<label>Description:</label>
										<textarea name="description"></textarea>
									</div>
									<div>
										<label>Relation:</label>
										<select name="type">
											<option value="is-a">is-a</option>
											<option value="is-contained-by">is-contained-by</option>
											<option value="contains">contains</option>
										</select>
									</div>
									<div>
										<label>Collection:</label>
										<input name="collection" value="" />
									</div>

								</div>
								<% } %>
			</div>
		</div>
		<button id="addRelPattern">
			<span class="glyphicon glyphicon-plus"></span> add related pattern</button>
	</div>
	<script src='/static/js/jquery-1.11.2.min.js' type='text/javascript'></script>
	<script src="/static/js/underscore.js" type="text/javascript"></script>
	<script src="/static/js/jsv.js" type="text/javascript"></script>
	<script src="/static/js/jsonform.js" type="text/javascript"></script>
	<script type="text/javascript">

		var formObject = {
			schema: {
				"name": {
					type: 'string',
					title: 'Name',
					default: '<%= items.name %>',
					required: true
				},
				"id": {
					type: 'string',
					title: 'ID',
					default: '<%= items._id %>',
					required: true
				},
				"tags": {
					type: 'string',
					title: 'Tags',
					default: '<%= items.management.tags %>',
					required: false
				},
				"alias": {
					type: 'string',
					title: 'Alias',
					default: '<%= items.alias %>',
					allowEmpty: true,
					required: false
				},
				"synopsis": {
					type: 'string',
					title: 'Synopsis',
					default: '<%= items.synopsis %>',
					allowEmpty: true,
					required: false
				},
				"confidence": {
					type: 'integer',
					title: 'Confidence',
					default: <%= items.confidence == undefined ? 0 : items.confidence %>,
					description: "...",
					required: false,
					"enum": [0, 1, 2, 3]
				},
				"illustration": {
					type: 'string',
					title: 'Illustration',
					default: '<%= items.illustration === '' ? "/static/img/illustrations/"+items.name.replace(/ /g,"-") : items.illustration %>',
					required: false
				},
				"context": {
					"title": "Context",
					"type": "string",
					default: '<%=: items.context | replace:/\n/g,"\\n" | replace:/\t/g," " | replace:/\r/g," " %>',
					required: true
				},
				"problem": {
					"title": "Problem",
					"type": "string",
					default: '<%= items.problem %>',
					required: true
				},
				"forces": {
					"title": "Forces",
					"type": "string",
					default: '<%=: items.forces | replace:/\n/g,"\\n" | replace:/\t/g," " | replace:/\r/g," " %>',
					required: false
				},
				"solution": {
					"title": "Solution",
					"type": "string",
					default: '<%= items.solution %>',
					required: true
				},
				"consequences": {
					"title": "Consequences",
					"type": "string",
					default: '<%=: items.consequences | replace:/\n/g,"\\n" | replace:/\t/g," " | replace:/\r/g," " %>',
					required: false
				},
				"rational": {
					type: 'string',
					title: 'Rational',
					default: '<%= items.rational %>',
					required: false
				},
				"diagram": {
					"title": "Diagram",
					"type": "string",
					default: '<%= items.diagram %>',
					required: false
				},
				"example_description": {
					type: 'string',
					title: 'Example description',
					default: '<%=: items.example_description | replace:/\n/g,"\\n" | replace:/\t/g," " | replace:/\r/g," " %>',
					required: false
				},
				"literature": {
					"title": "Literature",
					"type": "string",
					default: '<%= items.literature %>',
					required: false
				},
				"implementation": {
					type: 'string',
					title: 'Implementation',
					default: '<%= items.implementation %>',
					required: false
				},
				"related": {
					type: 'string',
					title: 'Related Patterns in other Pattern Languages',
					default: '<%=: items.related | replace:/\n/g,"\\n" | replace:/\t/g," " | replace:/\r/g," " %>',
					required: false
				}
			},
			/**************************/
			"form": [
				{
					"key": "name",
					"type": "text"
				},
				{
					"key": "id",
					"type": "text"
				},
				{
					"key": "tags",
					"type": "text"
				},
				{
					"key": "synopsis",
					"type": "textarea"
				},
				{
					"key": "confidence",
					"titleMap": {
						0: "0",
						1: "1",
						2: "2",
						3: "3"
					}
				},
				{
					"key": "illustration",
					"type": "text"
				},
				{
					"key": "context",
					"type": "textarea"
				},
				{
					"key": "problem",
					"type": "textarea"
				},
				{
					"key": "forces",
					"type": "textarea"
				},
				{
					"key": "solution",
					"type": "textarea"
				},
				{
					"key": "consequences",
					"type": "textarea"
				},

				{
					"key": "example_description",
					"type": "textarea"
				},
				/*{
					"key": "rational",
					"type": "textarea"
				},
				{
					"key": "diagram",
					"type": "text"
				},
				{
					"key": "literature",
					"type": "textarea"
				},
		{
					"key": "implementation",
					"type": "textarea"
				},*/
				{
					"key": "related",
					"type": "textarea"
				},
				{
					"type": "submit",
					"title": "save"
				},
				{
					"type": "button",
					"title": "cancel"
				},
				{
					"type": "button",
					"title": "delete",
					"onClick": function (evt) {
						evt.preventDefault();
						$.ajax({
							type: "GET",
							url: "/patterns/destroy/<%= items._id %>",
							success: function () {
								window.location.replace("/patterns/list");
							},
							error: function (err) {
								console.error(JSON.stringify(err))
							},
						});
					}
				}
			],
			//
			"onSubmit": function (error, values) {

				if (error) {
					console.error()
				}
				else {
					var data = values;
					data.management = <%-JSON.stringify(items.management) %>;
					data.management.revision_number = data.management.revision_number + 1;
					data.management.tags = data.tags.split(',');
					// colelct related patterns
					data.related_patterns = [];
					$('.miniform').each(function (i, val) {
						data.related_patterns[i] = {};
						data.related_patterns[i].label = $(this).find('input[name="label"]').val();
						data.related_patterns[i].description = $(this).find('textarea[name="description"]').val();
						data.related_patterns[i].pattern_collection = $(this).find('input[name="collection"]').val();
						data.related_patterns[i].type = $(this).find('select option:selected').val();

					});
					// send
					$.ajax({
						type: "POST",
						url: "/patterns/update/" + data.id, //<%= items._id %>",
						data: JSON.stringify(data),
						success: function () {
							window.location.replace("/patterns/view/<%= items.name.replace(/ /g,'-') %>");
						},
						error: function (err) {
							console.error(JSON.stringify(err))
						},
						contentType: "application/json"
					});
				}
			},
			"displayErrors": function (errors, formElt) {
				for (var i = 0; i < errors.length; i++) {
					errors[i].message = "Avast! Ye best be fixin' that field!";
				}
				$('#errors').jsonFormErrors(errors, formObject);
			}
		}

		$('form.patterns-edit').jsonForm(formObject);


		var relpaform = [
			'<div class="miniform">',
			'<div><label>Pattern:</label><input name="label" value="" /></div>',
			'<div><label>Description:</label><textarea name="description"></textarea></div>',
			'<div><label>Relation:</label>',
			'<select name="type">',
			'<option value="is-a"><%= items.name%> ist ähnlich/alternativ</option>',
			'<option value="is-contained-by"><%= items.name%> ist Bestandteil von</option>',
			'<option value="contains"><%= items.name %> beinhaltet</option>',//contains
			'</select></div>',
			'<div><label>Collection:</label><input name="collection" value="this" /></div>',
			'</div>'
		];
		$('#addRelPattern').click(function () {
			$('#relatedpatterns').append(relpaform.join(''));
		});

		$('.removeRelPattern').click(function () {
			$(this).parent().parent().remove();
		});


	</script>
<% } %>	